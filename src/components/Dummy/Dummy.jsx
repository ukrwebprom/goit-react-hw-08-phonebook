import './dummy.scss';

export const Dummy = () => {
  const example =
    '<div>\n\t<p>mango@mail.com</p>\n\t<button>Logout</button>\n</div>';
  return (
    <div className="task-description">
      <h1>Книга контактів</h1>
      <p>
        Додай у програму «Книга контактів» можливість реєстрації, логіна та
        оновлення користувача, а також роботу з приватною колекцією контактів.
      </p>

      <h2>Бекенд</h2>
      <p>
        Для цього завдання є готовий бекенд. Ознайомся з документацією. Він
        підтримує всі необхідні операції з колекцією контактів, а також
        реєстрацію, логін та оновлення користувача за допомогою JWT.
        Використовуй його замість твого бекенда створеного через сервіс
        mockapi.io.
      </p>

      <h2>Маршрутизація</h2>
      <p>
        Додай маршрутизацію з бібліотекою React Router. У програмі має бути
        кілька сторінок:
      </p>
      <ul style={{ listStyle: 'none' }}>
        <li>
          /register - публічний маршрут реєстрації нового користувача з формою
        </li>
        <li>
          /login - публічний маршрут логіна існуючого користувача з формою
        </li>
        <li>
          /contacts - приватний маршрут для роботи зі списком контактів
          користувача
        </li>
      </ul>
      <p>
        Додай компонент навігації Navigation з посиланнями для переходу по
        маршрутах.
      </p>

      <h2>Меню користувача</h2>
      <p>
        Створи компонент UserMenu, що відображає пошту користувача і кнопку
        виходу з облікового запису. Ось як може виглядати його розмітка.
      </p>
      <pre>{example}</pre>

      <h2>Стилізація</h2>
      <p>
        Це фінальна версія програми, тому попрацюй над оформленням інтерфейсу.
        Можна використовувати бібліотеку стилізації або компонентів, наприклад
        Chakra UI або Material UI.
      </p>
    </div>
  );
};
